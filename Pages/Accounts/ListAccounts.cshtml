@page
@model MyApp.Namespace.IndexModel
@{
    ViewData["Title"] = "Accounts";
}

<h2>Accounts</h2>

<!-- Toggle Button -->
<button id="toggleViewBtn" class="btn btn-primary mb-3">Switch to Card View</button>

<!-- Accounts Table -->
<table id="accountsTable" class="table table-striped table-bordered w-100">
    <thead>
        <tr>
            <th>Account ID</th>
            <th>Account Name</th>
            <th>Account Type</th>
            <th>Balance</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.7/js/jquery.dataTables.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.13.7/css/jquery.dataTables.min.css"/>
    <script src="~/js/site.js"></script> @* Ensure this path is correct for your LoadDataTable function *@
    <script>
        $(document).ready(function () {
            LoadDataTable({
                tableId: "accountsTable",
                ajaxUrl: "/api/Accounts", // Your API endpoint
                columns: [
                    { data: "accountId" },   // Matches Account.AccountId property
                    { data: "accountName" }, // Matches Account.AccountName property
                    { data: "accountType" }  // Matches Account.AccountType property
                    // Add more columns here if your table headers include them and the model has corresponding properties
                ],
                pageLength: 25,
                // Optional: default order, e.g., by AccountName ascending
                // defaultOrder: [[1, 'asc']]
            });
        });
    </script>
    }
@page
@model MyApp.Namespace.ListEmployeesModel
@{
    ViewData["Title"] = "Employees";
}

<div class="mx-auto p-4 sm:p-6 lg:p-8 glass-effect rounded-lg h-full overflow-y-auto">
    <h2 class="text-4xl themed-heading font-extrabold mb-6 border-b-4 pb-2 inline-block">Employee Management Dashboard</h2>

    <!-- Employee Summary KPIs -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        <div class="data-card glass-effect rounded-xl p-6 border flex flex-col justify-between shadow-md">
            <h3 class="text-lg font-semibold text-primary mb-2">Total Employees</h3>
            <p class="text-4xl font-bold text-blue-600 mt-auto">1,250</p>
            <span class="text-sm text-gray-500">Active workforce</span>
        </div>
        <div class="data-card glass-effect rounded-xl p-6 border flex flex-col justify-between shadow-md">
            <h3 class="text-lg font-semibold text-primary mb-2">New Hires (Last 30 Days)</h3>
            <p class="text-4xl font-bold text-green-600 mt-auto">18</p>
            <span class="text-sm text-gray-500">Recent additions to the team</span>
        </div>
        <div class="data-card glass-effect rounded-xl p-6 border flex flex-col justify-between shadow-md">
            <h3 class="text-lg font-semibold text-primary mb-2">Avg. Employee Tenure</h3>
            <p class="text-4xl font-bold text-purple-600 mt-auto">4.5 Years</p>
            <span class="text-sm text-gray-500">Average time with the company</span>
        </div>
        <div class="data-card glass-effect rounded-xl p-6 border flex flex-col justify-between shadow-md">
            <h3 class="text-lg font-semibold text-primary mb-2">Voluntary Turnover Rate (Annual)</h3>
            <p class="text-4xl font-bold text-red-600 mt-auto">12.3%</p>
            <span class="text-sm text-gray-500">Last 12 months</span>
        </div>
    </div>

    <!-- Filter and Action Buttons -->
    <div class="mb-8 p-6 glass-effect rounded-xl border shadow-md">
        <h3 class="text-xl font-bold themed-heading mb-4 border-b-2 pb-2 inline-block">Filter Employees</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6">
            <div>
                <label for="employeeDepartmentFilter" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Department</label>
                <select id="employeeDepartmentFilter" class="form-select w-full rounded-md shadow-sm border-gray-300 focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
                    <option value="">All Departments</option>
                    <option value="Sales">Sales</option>
                    <option value="Marketing">Marketing</option>
                    <option value="Engineering">Engineering</option>
                    <option value="HR">Human Resources</option>
                    <option value="Finance">Finance</option>
                    <option value="Operations">Operations</option>
                </select>
            </div>
            <div>
                <label for="employeeJobTitleFilter" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Job Title</label>
                <input type="text" id="employeeJobTitleFilter" placeholder="Search by job title..." class="form-control w-full rounded-md shadow-sm border-gray-300 focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
            </div>
            <div>
                <label for="employeeStatusFilter" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Employment Status</label>
                <select id="employeeStatusFilter" class="form-select w-full rounded-md shadow-sm border-gray-300 focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
                    <option value="">All Statuses</option>
                    <option value="Active">Active</option>
                    <option value="On Leave">On Leave</option>
                    <option value="Terminated">Terminated</option>
                </select>
            </div>
            <div>
                <label for="employeeHireDateFilter" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1">Hire Date From</label>
                <input type="date" id="employeeHireDateFilter" class="form-control w-full rounded-md shadow-sm border-gray-300 focus:border-blue-300 focus:ring focus:ring-blue-200 focus:ring-opacity-50">
            </div>
        </div>
        <div class="flex flex-wrap gap-4 items-center">
            <a href="/Employees/Create" class="flex items-center px-6 py-3 btn-themed font-semibold rounded-full shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 ease-in-out focus:outline-none focus:ring-4 focus:ring-blue-300">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path></svg>
                Add New Employee
            </a>
            <button class="flex items-center px-6 py-3 btn-themed-secondary font-semibold rounded-full shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 ease-in-out focus:outline-none focus:ring-4 focus:ring-purple-300">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z"></path></svg>
                Manage Benefits
            </button>
            <button class="flex items-center px-6 py-3 btn-themed-secondary font-semibold rounded-full shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 ease-in-out focus:outline-none focus:ring-4 focus:ring-yellow-300">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-3 7h3m-3 4h3m-6-4h.01M9 16h.01"></path></svg>
                Performance Reviews
            </button>
            <button id="toggleViewBtn_employeesTable" class="flex items-center px-6 py-3 btn-themed-secondary font-semibold rounded-full shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 ease-in-out focus:outline-none focus:ring-4 focus:ring-green-300">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zm10 0a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zm10 0a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path></svg>
                Switch to Card View
            </button>
            <button id="toggleChartBtn_employeesTable" class="flex items-center px-6 py-3 btn-themed-secondary font-semibold rounded-full shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300 ease-in-out focus:outline-none focus:ring-4 focus:ring-green-300">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2v10zm12 0a2 2 0 01-2 2h-2a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2v10zm-7 0a2 2 0 01-2 2h-2a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2v10z"></path></svg>
                Show Chart
            </button>
        </div>
    </div>

    <!-- Employees Table Container -->
    <div class="mb-8">
        <h3 class="text-2xl font-bold themed-heading mb-4 border-b-2 pb-2 inline-block">All Employees</h3>
        <table id="employeesTable" class="display w-full text-left border-collapse rounded-lg shadow-md" style="width:100%">
            <thead>
                <tr>
                    <th class="px-4 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider rounded-tl-xl">Employee ID</th>
                    <th class="px-4 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider">Name</th>
                    <th class="px-4 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider">Job Title</th>
                    <th class="px-4 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider">Department</th>
                    <th class="px-4 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider">Hire Date</th>
                    <th class="px-4 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider">Employment Status</th>
                    <th class="px-4 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider">Gross Pay</th>
                    <th class="px-4 py-3 border-b-2 border-gray-200 text-left text-xs font-semibold uppercase tracking-wider rounded-tr-xl">Actions</th>
                </tr>
            </thead>
            <tbody>
                @* DataTables will populate this tbody *@
            </tbody>
        </table>

        <div id="employeesTable-card-view" class="mt-8 cards-grid-container grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6" style="display: none;"></div>
        <div id="employeesTable-chart-container" style="display: none;">
            <canvas id="employeesTable-chart"></canvas>
        </div>
    </div>

    <!-- Employee Charts Section -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
        <div class="data-card glass-effect rounded-xl p-6 border shadow-md">
            <h3 class="text-xl font-bold themed-heading mb-4 border-b-2 pb-2 inline-block">Employee Distribution by Department</h3>
            <div style="height: 300px;"> 
                <canvas id="employeeDepartmentDistributionChart"></canvas>
            </div>
        </div>
        <div class="data-card glass-effect rounded-xl p-6 border shadow-md">
            <h3 class="text-xl font-bold themed-heading mb-4 border-b-2 pb-2 inline-block">Headcount Trend (Last 12 Months)</h3>
            <div style="height: 300px;"> 
                <canvas id="headcountTrendChart"></canvas>
            </div>
        </div>
    </div>

    <div class="data-card glass-effect rounded-xl p-6 border shadow-md mb-8">
        <h3 class="text-xl font-bold themed-heading mb-4 border-b-2 pb-2 inline-block">Voluntary Turnover Rate (Annual)</h3>
        <div style="height: 350px;"> 
            <canvas id="turnoverRateChart"></canvas>
        </div>
    </div>

</div>

<!-- Employee Profile Modal -->
<div id="employeeProfileModal" class="fixed inset-0 bg-gray-600 bg-opacity-75 flex items-center justify-center z-50 hidden">
    <div class="bg-white rounded-lg shadow-xl w-11/12 md:w-1/2 lg:w-1/3 flex flex-col p-6 glass-effect border">
        <div class="flex justify-between items-center pb-4 border-b border-gray-200 mb-4">
            <h3 id="employeeModalTitle" class="text-2xl font-bold text-primary">Employee Profile</h3>
            <button id="closeEmployeeProfileModalBtn" class="text-gray-500 hover:text-gray-700 focus:outline-none">
                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path></svg>
            </button>
        </div>
        <div id="employeeProfileContent" class="text-gray-700 space-y-3 overflow-y-auto max-h-[70vh]">
            <p><strong>Employee ID:</strong> <span id="modalEmployeeId"></span></p>
            <p><strong>Name:</strong> <span id="modalEmployeeName"></span></p>
            <p><strong>Job Title:</strong> <span id="modalJobTitle"></span></p>
            <p><strong>Department:</strong> <span id="modalDepartment"></span></p>
            <p><strong>Hire Date:</strong> <span id="modalHireDate"></span></p>
            <p><strong>Employment Status:</strong> <span id="modalEmploymentStatus"></span></p>
            <p><strong>Gross Pay:</strong> <span id="modalGrossPay"></span></p>
            <p><strong>Contact Info:</strong> <span id="modalContactInfo"></span></p>
            <p class="text-sm text-gray-500 mt-4">More detailed information, such as performance reviews, benefits enrollment, and training history, can be integrated here.</p>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        // Function to open the employee profile modal
        function openEmployeeProfileModal(employeeId, firstName, lastName, jobTitle, departmentId, contactInfo, grossPay) {
            const modal = document.getElementById('employeeProfileModal');
            document.getElementById('modalEmployeeId').textContent = employeeId;
            document.getElementById('modalEmployeeName').textContent = `${firstName} ${lastName}`;
            document.getElementById('modalJobTitle').textContent = jobTitle;
            document.getElementById('modalDepartmentId').textContent = departmentId;
            document.getElementById('modalContactInfo').textContent = contactInfo;
            // Format grossPay as currency
            document.getElementById('modalGrossPay').textContent = grossPay ? new Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD' }).format(grossPay) : 'N/A';
            document.getElementById('employeeModalTitle').textContent = `Profile: ${firstName} ${lastName}`;
            modal.classList.remove('hidden'); // Show the modal
        }

        // Function to close the employee profile modal
        function closeEmployeeProfileModal() {
            document.getElementById('employeeProfileModal').classList.add('hidden'); // Hide the modal
        }

        $(document).ready(function () {
            const employeesTableId = "employeesTable";

            LoadDataTable({
                tableId: employeesTableId,
                ajaxUrl: "/api/Employees", // Assuming an API endpoint for employees
                columns: [
                    {
                        data: null,
                        title: "Profile",
                        orderable: false,
                        searchable: false,
                        render: function (data, type, row) {
                            // Render a button to open the profile modal
                            return `<button class="text-blue-600 hover:text-blue-800 font-semibold" onclick="openEmployeeProfileModal('${row.employeeId}', '${row.firstName}', '${row.lastName}', '${row.jobTitle}', '${row.departmentId}', '${row.contactInfo}', ${row.grossPay || 0})">View Profile</button>`;
                        }
                    },
                    { data: "firstName", title: "First Name" },
                    { data: "lastName", title: "Last Name" },
                    { data: "jobTitle", title: "Job Title" },
                    { data: "departmentId", title: "Department ID" },
                    { data: "contactInfo", title: "Contact Info" },
                    { data: "grossPay", title: "Gross Pay", render: $.fn.dataTable.render.number(',', '.', 2, '$') },
                    {
                        data: null,
                        title: "Actions",
                        orderable: false,
                        searchable: false,
                        render: function (data, type, row) {
                            // Example action buttons - you can customize these
                            return `
                                <button class="text-indigo-600 hover:text-indigo-900 mr-2">Edit</button>
                                <button class="text-red-600 hover:text-red-900">Delete</button>
                            `;
                        }
                    }
                ],
                pageLength: 10,
                initialIsCardView: false,
                initialIsChartView: false,
                cardViewRender: function (data) {
                    return `
                        <div class="data-card bg-white rounded-xl shadow-lg p-6 border border-gray-200 hover:shadow-xl transition-shadow duration-300">
                            <h3 class="text-xl font-bold text-blue-700 mb-2">${data.firstName} ${data.lastName}</h3>
                            <div class="card-item"><strong>Employee ID:</strong> <span>${data.employeeId}</span></div>
                            <div class="card-item"><strong>Job Title:</strong> <span>${data.jobTitle || 'N/A'}</span></div>
                            <div class="card-item"><strong>Department ID:</strong> <span>${data.departmentId || 'N/A'}</span></div>
                            <div class="card-item"><strong>Contact:</strong> <span>${data.contactInfo || 'N/A'}</span></div>
                            <div class="card-item"><strong>Gross Pay:</strong> <span>${$.fn.dataTable.render.number(',', '.', 2, '$').display(data.grossPay)}</span></div>
                            <button class="mt-4 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600" onclick="openEmployeeProfileModal('${data.employeeId}', '${data.firstName}', '${data.lastName}', '${data.jobTitle}', '${data.departmentId}', '${data.contactInfo}', ${data.grossPay || 0})">View Profile</button>
                        </div>
                    `;
                },
                chartConfig: {
                    type: 'pie', // Changed to pie chart for department distribution
                    processData: function (apiData, columns) {
                        // Group employees by Department ID and count them
                        const departmentCounts = {};
                        apiData.forEach(item => {
                            const department = item.departmentId || 'Unknown';
                            departmentCounts[department] = (departmentCounts[department] || 0) + 1;
                        });
                        const labels = Object.keys(departmentCounts);
                        const dataValues = labels.map(label => departmentCounts[label]);

                        return {
                            labels: labels,
                            datasets: [{
                                label: 'Number of Employees by Department',
                                data: dataValues,
                                backgroundColor: [
                                    'rgba(255, 99, 132, 0.6)',
                                    'rgba(54, 162, 235, 0.6)',
                                    'rgba(255, 206, 86, 0.6)',
                                    'rgba(75, 192, 192, 0.6)',
                                    'rgba(153, 102, 255, 0.6)',
                                    'rgba(255, 159, 64, 0.6)',
                                    'rgba(199, 199, 199, 0.6)'
                                ],
                                borderColor: [
                                    'rgba(255, 99, 132, 1)',
                                    'rgba(54, 162, 235, 1)',
                                    'rgba(255, 206, 86, 1)',
                                    'rgba(75, 192, 192, 1)',
                                    'rgba(153, 102, 255, 1)',
                                    'rgba(255, 159, 64, 1)',
                                    'rgba(199, 199, 199, 1)'
                                ],
                                borderWidth: 1
                            }]
                        };
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            title: {
                                display: true,
                                text: 'Employee Distribution by Department',
                                font: { size: 20, family: 'Inter, sans-serif', weight: 'bold' },
                                color: '#333'
                            },
                            legend: {
                                display: true,
                                position: 'right',
                                labels: {
                                    font: { family: 'Inter, sans-serif' }
                                }
                            },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        let label = context.label || '';
                                        if (label) {
                                            label += ': ';
                                        }
                                        if (context.parsed !== null) {
                                            const total = context.dataset.data.reduce((sum, val) => sum + val, 0);
                                            const percentage = ((context.parsed / total) * 100).toFixed(2);
                                            label += `${context.parsed} (${percentage}%)`;
                                        }
                                        return label;
                                    }
                                }
                            }
                        },
                        animation: {
                            duration: 1000,
                            easing: 'easeOutQuart'
                        },
                        font: {
                            family: 'Inter, sans-serif'
                        }
                    }
                }
            });

            // Table/Card toggle button
            $(`#toggleViewBtn_${employeesTableId}`).on('click', function () {
                toggleTableView(employeesTableId);
                const $btn = $(this);
                const instanceState = dataTableManager[employeesTableId];
                if (instanceState.isCardView) {
                    $btn.html('<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path></svg>Switch to Table View');
                } else {
                    $btn.html('<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zm10 0a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zm10 0a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"></path></svg>Switch to Card View');
                }
            });

            // Chart toggle button
            $(`#toggleChartBtn_${employeesTableId}`).on('click', function () {
                toggleChartView(employeesTableId);
                const $btn = $(this);
                const instanceState = dataTableManager[employeesTableId];
                if (instanceState.isChartView) {
                    $btn.html('<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 17V7m0 10a2 2 0 01-2 2H5a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2v10zm12 0V7m0 10a2 2 0 01-2 2h-2a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2v10zm-6 0V7m0 10a2 2 0 01-2 2h-2a2 2 0 01-2-2V7a2 2 0 012-2h2a2 2 0 012 2v10z"></path></svg>Show Table/Card');
                } else {
                    $btn.html('<svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 12l3-3m0 0l3 3m-3-3v8m0-13a9 9 0 110 18 9 9 0 010-18z"></path></svg>Show Chart');
                }
            });

            // Attach event listener to close button of the modal
            document.getElementById('closeEmployeeProfileModalBtn').addEventListener('click', closeEmployeeProfileModal);
        });
    </script>
}
// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ERP_BI_Operations.Models;

public partial class ERP_BIContext : DbContext
{
    public ERP_BIContext(DbContextOptions<ERP_BIContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Account> Accounts { get; set; }

    public virtual DbSet<Apinvoice> Apinvoices { get; set; }

    public virtual DbSet<Arinvoice> Arinvoices { get; set; }

    public virtual DbSet<BankAccount> BankAccounts { get; set; }

    public virtual DbSet<Company> Companies { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<Department> Departments { get; set; }

    public virtual DbSet<Document> Documents { get; set; }

    public virtual DbSet<Employee> Employees { get; set; }

    public virtual DbSet<EmployeePayDetail> EmployeePayDetails { get; set; }

    public virtual DbSet<Equipment> Equipment { get; set; }

    public virtual DbSet<EquipmentUsage> EquipmentUsages { get; set; }

    public virtual DbSet<FinancialSnapshot> FinancialSnapshots { get; set; }

    public virtual DbSet<ForecastedFinancial> ForecastedFinancials { get; set; }

    public virtual DbSet<JournalEntry> JournalEntries { get; set; }

    public virtual DbSet<JournalEntryLine> JournalEntryLines { get; set; }

    public virtual DbSet<Kpi> Kpis { get; set; }

    public virtual DbSet<MaintenanceRecord> MaintenanceRecords { get; set; }

    public virtual DbSet<Material> Materials { get; set; }

    public virtual DbSet<MaterialUsage> MaterialUsages { get; set; }

    public virtual DbSet<Payment> Payments { get; set; }

    public virtual DbSet<PayrollRun> PayrollRuns { get; set; }

    public virtual DbSet<Project> Projects { get; set; }

    public virtual DbSet<ProjectFinancialSummary> ProjectFinancialSummaries { get; set; }

    public virtual DbSet<PurchaseOrder> PurchaseOrders { get; set; }

    public virtual DbSet<PurchaseOrderLine> PurchaseOrderLines { get; set; }

    public virtual DbSet<Receipt> Receipts { get; set; }

    public virtual DbSet<Rfi> Rfis { get; set; }

    public virtual DbSet<ServiceAgreement> ServiceAgreements { get; set; }

    public virtual DbSet<ServiceOrder> ServiceOrders { get; set; }

    public virtual DbSet<TimeEntry> TimeEntries { get; set; }

    public virtual DbSet<Transmittal> Transmittals { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<Vendor> Vendors { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Account>(entity =>
        {
            entity.HasKey(e => e.AccountId).HasName("PK__Accounts__349DA586FA8F2B0B");

            entity.HasOne(d => d.Company).WithMany(p => p.Accounts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Accounts__Compan__440B1D61");
        });

        modelBuilder.Entity<Apinvoice>(entity =>
        {
            entity.HasKey(e => e.ApinvoiceId).HasName("PK__APInvoic__E966ABB7D390D263");

            entity.HasOne(d => d.Project).WithMany(p => p.Apinvoices).HasConstraintName("FK__APInvoice__Proje__5535A963");

            entity.HasOne(d => d.Vendor).WithMany(p => p.Apinvoices)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__APInvoice__Vendo__5441852A");
        });

        modelBuilder.Entity<Arinvoice>(entity =>
        {
            entity.HasKey(e => e.ArinvoiceId).HasName("PK__ARInvoic__58CFF1192BC704AB");

            entity.HasOne(d => d.Customer).WithMany(p => p.Arinvoices)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ARInvoice__Custo__5812160E");

            entity.HasOne(d => d.Project).WithMany(p => p.Arinvoices).HasConstraintName("FK__ARInvoice__Proje__59063A47");
        });

        modelBuilder.Entity<BankAccount>(entity =>
        {
            entity.HasKey(e => e.BankId).HasName("PK__BankAcco__AA08CB3309D64BD7");

            entity.HasOne(d => d.Company).WithMany(p => p.BankAccounts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__BankAccou__Compa__5165187F");
        });

        modelBuilder.Entity<Company>(entity =>
        {
            entity.HasKey(e => e.CompanyId).HasName("PK__Company__2D971C4CDA79C528");
        });

        modelBuilder.Entity<Customer>(entity =>
        {
            entity.HasKey(e => e.CustomerId).HasName("PK__Customer__A4AE64B8A07672BB");

            entity.HasOne(d => d.Company).WithMany(p => p.Customers)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Customers__Compa__49C3F6B7");
        });

        modelBuilder.Entity<Department>(entity =>
        {
            entity.HasKey(e => e.DepartmentId).HasName("PK__Departme__B2079BCDBE29F4E9");

            entity.HasOne(d => d.Company).WithMany(p => p.Departments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Departmen__Compa__398D8EEE");
        });

        modelBuilder.Entity<Document>(entity =>
        {
            entity.HasKey(e => e.DocumentId).HasName("PK__Document__1ABEEF6F6BC84095");

            entity.HasOne(d => d.Project).WithMany(p => p.Documents).HasConstraintName("FK__Documents__Proje__17036CC0");
        });

        modelBuilder.Entity<Employee>(entity =>
        {
            entity.HasKey(e => e.EmployeeId).HasName("PK__Employee__7AD04FF1EA33D5C9");

            entity.HasOne(d => d.Company).WithMany(p => p.Employees)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Employees__Compa__3D5E1FD2");

            entity.HasOne(d => d.Department).WithMany(p => p.Employees).HasConstraintName("FK__Employees__Depar__3C69FB99");
        });

        modelBuilder.Entity<EmployeePayDetail>(entity =>
        {
            entity.HasKey(e => e.PayDetailId).HasName("PK__Employee__52E1851868D8822A");

            entity.HasOne(d => d.Employee).WithMany(p => p.EmployeePayDetails)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__EmployeeP__Emplo__6D0D32F4");

            entity.HasOne(d => d.PayrollRun).WithMany(p => p.EmployeePayDetails)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__EmployeeP__Payro__6E01572D");
        });

        modelBuilder.Entity<Equipment>(entity =>
        {
            entity.HasKey(e => e.EquipmentId).HasName("PK__Equipmen__344745992BA2B2B5");

            entity.HasOne(d => d.Company).WithMany(p => p.Equipment)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Equipment__Compa__75A278F5");
        });

        modelBuilder.Entity<EquipmentUsage>(entity =>
        {
            entity.HasKey(e => e.UsageId).HasName("PK__Equipmen__29B197C0C1F59FCC");

            entity.HasOne(d => d.Equipment).WithMany(p => p.EquipmentUsages)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Equipment__Equip__787EE5A0");

            entity.HasOne(d => d.Operator).WithMany(p => p.EquipmentUsages).HasConstraintName("FK__Equipment__Opera__7A672E12");

            entity.HasOne(d => d.Project).WithMany(p => p.EquipmentUsages).HasConstraintName("FK__Equipment__Proje__797309D9");
        });

        modelBuilder.Entity<FinancialSnapshot>(entity =>
        {
            entity.HasKey(e => e.SnapshotId).HasName("PK__Financia__664F570B9D32F135");

            entity.HasOne(d => d.Company).WithMany(p => p.FinancialSnapshots)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Financial__Compa__2180FB33");
        });

        modelBuilder.Entity<ForecastedFinancial>(entity =>
        {
            entity.HasKey(e => e.ForecastId).HasName("PK__Forecast__7F27445805771E0D");

            entity.HasOne(d => d.Company).WithMany(p => p.ForecastedFinancials)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Forecaste__Compa__2B0A656D");

            entity.HasOne(d => d.Project).WithMany(p => p.ForecastedFinancials).HasConstraintName("FK__Forecaste__Proje__2BFE89A6");
        });

        modelBuilder.Entity<JournalEntry>(entity =>
        {
            entity.HasKey(e => e.JournalEntryId).HasName("PK__JournalE__575A70BB81C0B1B6");

            entity.HasOne(d => d.Company).WithMany(p => p.JournalEntries)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__JournalEn__Compa__6383C8BA");
        });

        modelBuilder.Entity<JournalEntryLine>(entity =>
        {
            entity.HasKey(e => e.JournalEntryLineId).HasName("PK__JournalE__38207DD845DFF006");

            entity.HasOne(d => d.Account).WithMany(p => p.JournalEntryLines)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__JournalEn__Accou__6754599E");

            entity.HasOne(d => d.JournalEntry).WithMany(p => p.JournalEntryLines)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__JournalEn__Journ__66603565");
        });

        modelBuilder.Entity<Kpi>(entity =>
        {
            entity.HasKey(e => e.Kpiid).HasName("PK__KPIs__72E69281C3BC4DCA");

            entity.HasOne(d => d.Company).WithMany(p => p.Kpis)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__KPIs__CompanyID__2739D489");

            entity.HasOne(d => d.Project).WithMany(p => p.Kpis).HasConstraintName("FK__KPIs__ProjectID__282DF8C2");
        });

        modelBuilder.Entity<MaintenanceRecord>(entity =>
        {
            entity.HasKey(e => e.MaintenanceId).HasName("PK__Maintena__E60542B5191C3C1D");

            entity.HasOne(d => d.Equipment).WithMany(p => p.MaintenanceRecords)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Maintenan__Equip__7D439ABD");

            entity.HasOne(d => d.PerformedByNavigation).WithMany(p => p.MaintenanceRecords).HasConstraintName("FK__Maintenan__Perfo__7E37BEF6");
        });

        modelBuilder.Entity<Material>(entity =>
        {
            entity.HasKey(e => e.MaterialId).HasName("PK__Material__C5061317EA192109");

            entity.HasOne(d => d.Company).WithMany(p => p.Materials)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Materials__Compa__08B54D69");
        });

        modelBuilder.Entity<MaterialUsage>(entity =>
        {
            entity.HasKey(e => e.MaterialUsageId).HasName("PK__Material__95D374C8EB913364");

            entity.HasOne(d => d.Material).WithMany(p => p.MaterialUsages)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__MaterialU__Mater__14270015");

            entity.HasOne(d => d.Project).WithMany(p => p.MaterialUsages)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__MaterialU__Proje__1332DBDC");
        });

        modelBuilder.Entity<Payment>(entity =>
        {
            entity.HasKey(e => e.PaymentId).HasName("PK__Payments__9B556A583C774907");

            entity.HasOne(d => d.Apinvoice).WithMany(p => p.Payments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Payments__APInvo__5BE2A6F2");

            entity.HasOne(d => d.Bank).WithMany(p => p.Payments)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Payments__BankID__5CD6CB2B");
        });

        modelBuilder.Entity<PayrollRun>(entity =>
        {
            entity.HasKey(e => e.PayrollRunId).HasName("PK__PayrollR__8B3CCD6D83546C94");

            entity.HasOne(d => d.Company).WithMany(p => p.PayrollRuns)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PayrollRu__Compa__6A30C649");
        });

        modelBuilder.Entity<Project>(entity =>
        {
            entity.HasKey(e => e.ProjectId).HasName("PK__Projects__761ABED0C1272354");

            entity.HasOne(d => d.Company).WithMany(p => p.Projects)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Projects__Compan__4E88ABD4");

            entity.HasOne(d => d.Customer).WithMany(p => p.Projects).HasConstraintName("FK__Projects__Custom__4D94879B");

            entity.HasOne(d => d.ProjectManager).WithMany(p => p.Projects).HasConstraintName("FK__Projects__Projec__4CA06362");
        });

        modelBuilder.Entity<ProjectFinancialSummary>(entity =>
        {
            entity.HasKey(e => e.ProjectSummaryId).HasName("PK__ProjectF__57B5B05ECDD0CEFC");

            entity.HasOne(d => d.Project).WithMany(p => p.ProjectFinancialSummaries)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ProjectFi__Proje__245D67DE");
        });

        modelBuilder.Entity<PurchaseOrder>(entity =>
        {
            entity.HasKey(e => e.Poid).HasName("PK__Purchase__5F02A2F4272469C8");

            entity.HasOne(d => d.Project).WithMany(p => p.PurchaseOrders).HasConstraintName("FK__PurchaseO__Proje__0C85DE4D");

            entity.HasOne(d => d.Vendor).WithMany(p => p.PurchaseOrders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PurchaseO__Vendo__0B91BA14");
        });

        modelBuilder.Entity<PurchaseOrderLine>(entity =>
        {
            entity.HasKey(e => e.PolineId).HasName("PK__Purchase__07B9D342A9206997");

            entity.HasOne(d => d.Material).WithMany(p => p.PurchaseOrderLines)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PurchaseO__Mater__10566F31");

            entity.HasOne(d => d.Po).WithMany(p => p.PurchaseOrderLines)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__PurchaseOr__POID__0F624AF8");
        });

        modelBuilder.Entity<Receipt>(entity =>
        {
            entity.HasKey(e => e.ReceiptId).HasName("PK__Receipts__CC08C400D8D0BC72");

            entity.HasOne(d => d.Arinvoice).WithMany(p => p.Receipts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Receipts__ARInvo__5FB337D6");

            entity.HasOne(d => d.Bank).WithMany(p => p.Receipts)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Receipts__BankID__60A75C0F");
        });

        modelBuilder.Entity<Rfi>(entity =>
        {
            entity.HasKey(e => e.Rfiid).HasName("PK__RFIs__BC36FCEB4DF6CAE9");

            entity.HasOne(d => d.Project).WithMany(p => p.Rfis)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__RFIs__ProjectID__19DFD96B");

            entity.HasOne(d => d.RequestedByNavigation).WithMany(p => p.Rfis)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__RFIs__RequestedB__1AD3FDA4");
        });

        modelBuilder.Entity<ServiceAgreement>(entity =>
        {
            entity.HasKey(e => e.AgreementId).HasName("PK__ServiceA__0A309D237DEB4514");

            entity.HasOne(d => d.Customer).WithMany(p => p.ServiceAgreements)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ServiceAg__Custo__01142BA1");
        });

        modelBuilder.Entity<ServiceOrder>(entity =>
        {
            entity.HasKey(e => e.ServiceOrderId).HasName("PK__ServiceO__8E1ABD05214FC608");

            entity.HasOne(d => d.Agreement).WithMany(p => p.ServiceOrders).HasConstraintName("FK__ServiceOr__Agree__03F0984C");

            entity.HasOne(d => d.AssignedTechnician).WithMany(p => p.ServiceOrders).HasConstraintName("FK__ServiceOr__Assig__05D8E0BE");

            entity.HasOne(d => d.Customer).WithMany(p => p.ServiceOrders)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__ServiceOr__Custo__04E4BC85");
        });

        modelBuilder.Entity<TimeEntry>(entity =>
        {
            entity.HasKey(e => e.TimeEntryId).HasName("PK__TimeEntr__36FCE7E90ED67591");

            entity.HasOne(d => d.Employee).WithMany(p => p.TimeEntries)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__TimeEntri__Emplo__70DDC3D8");

            entity.HasOne(d => d.Project).WithMany(p => p.TimeEntries).HasConstraintName("FK__TimeEntri__Proje__71D1E811");
        });

        modelBuilder.Entity<Transmittal>(entity =>
        {
            entity.HasKey(e => e.TransmittalId).HasName("PK__Transmit__D21578B12793373F");

            entity.HasOne(d => d.Project).WithMany(p => p.Transmittals)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Transmitt__Proje__1DB06A4F");

            entity.HasOne(d => d.SentByNavigation).WithMany(p => p.Transmittals)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Transmitt__SentB__1EA48E88");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__Users__1788CCAC683119CB");

            entity.HasOne(d => d.Employee).WithMany(p => p.Users).HasConstraintName("FK__Users__EmployeeI__412EB0B6");
        });

        modelBuilder.Entity<Vendor>(entity =>
        {
            entity.HasKey(e => e.VendorId).HasName("PK__Vendors__FC8618D3916E9225");

            entity.HasOne(d => d.Company).WithMany(p => p.Vendors)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Vendors__Company__46E78A0C");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}